Algorithmica(1988)3:79-119Algorithmica91988Spfinger-VerlagNewYorkInc.CompetitiveSnoopyCaching'AnnaR.Karlin,2MarkS.Manasse,3LarryRudolph,4andDanielD.Sleator5Abstract.Inasnoopycachemultiprocessorsystem,eachprocessorhasacacheinwhichitstoresblocksofdata.Eachcacheisconnectedtoabususedtocommunicatewith80A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.Sleatorstoredinmorethanonecacherequirebuscommunication.Thisisbecauseeachcopyoftheblockmusteitherbemarkedinvalid,orupdatedtoreflectthenewvalue.(Ifaparticularcachedecidednottotakeeitheroftheseactions,thenthepossibilityexiststhatthiscachewouldlaterreturnanincorrectvaluetoitsprocessor.)Thus,abuscycleisrequiredtobroadcastinformationtoalltherelevantcaches.Asnoopycachesystemmustusesomeblockretentionstrategytodecideforeachcachewhichblockstokeepandwhichtodiscard.Inchoosingsuchastrategywefaceatradeoff:ifablockisreplicated,thenthesystemmustpaythecostofupdatingallcopiesfollowingawritetothatblock;ifablockisdroppedfromaprocessor'scache,thenthesystemmustpayfortheprocessor'snextrequesttoreadavariableinthatblock.Mostsnoopycachedesignsuseeitherexclusive-writeorpack-ratasCompetitiveSnoopyCaching81Webelievethatcompetitiveanalysisismoreusefulthanothertheoreticalmethodsforanalyzingsnoopycachingstrategies.Therearesequencesonwhichnosnoopycachingstrategydoeswell(whichrarelyoccurinrealsystems).Itisthereforenotsensibletousetheworst-caseperformanceoftwoschemesasanindicatorofwhichisbetter.Todoaverage-caseanalysis,astatisticalmodelofthesequenceofrequestsisrequired.Itisextremelydifficulttodevisearealisticmodel,sincethepatternofaccesseschangesdynamicallywithtimeandwithdifferentapplications.Withoutpriorknowledgeofthestructureofthesequenceofoperations,aschemethatiscompetitiveismoreattractivethanonethatisnot.Acompetitiveschemecanbeonlyslightlyworsethananyotherscheme,andmaybeverymuchbetter.Theprincipleusedtodevisetheseschemesisroughlythefollowing:thechangefromastateAtoastateA'ismadewhenthecostofmakingthechangeequalstheextracostincurredduetobeinginstateAinsteadofA'.Likethestrategiesof[RS2],ouralgorithmskeepcounters.Weusethesecounterstomakethesecostestimatesandtodecidewhentochangethearrangementofblocks.Weusecompetitiveanalysistocompareblockretentionschemesforparticulararchitectures.Ouranalysesshedlittlelightonthequestionofwhicharchitecturetochoose,orhowtochoosetheparametersofagivenarchitecture.Section2ofthispaperdefinesourterminology,notation,andmodels.Section3presentslowerbounds.Section4describesandanalyzesastrongly82A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.SleatorwhichblockBwillreside.Ifhi(B)=hi(B')thencacheicancontainatmostoneoftheblocksBandB'atanytime.(Someauthorsdescribethissituationbysayingthatthesetsizeis1.)Inanassociativecacheanylinecanstoreanyblock.Acachelineissaidtobeemptyifitdoesnotcontainablock.Acachecollisionoccurswhenablockisneededinacachelinewhichcurrentlycontainsanotherblock.Ablockmayresideinanysubsetofthecaches,andmayormaynotresideinmainmemory.Ifablockisinnoneofthecachesthenitmustbeinmainmemory.Ifmainmemorydoesnothaveanup-to-datecopyoftheblockthenitisdirty,otherwiseitisclean.AblockthatiscontainedinmorethanonecacheCompetitiveSnoopyCaching83Supplythrough(i,v):Updatelocal(i,v):Updateglobal(i,v):Updatethrough(i,v):Variablevissuppliedtoprocessori.Block[v]isnotpresentincachei.Thevalueisretrievedoverthebus.Thisactioncosts1.Variablevisupdatedincachei.Thisactionisonlyallowedifblock[v]isuniquetocachei.Afterthisactionblock[v]isdirty.Theactioncosts0.Variablevisupdatedincacheiandisbroadcastonthebus.ThisactionisonlytakenonlyifblockIv]isincachei.Iftheblockisinitiallyclean,andmainmemorysnoops,thentheblockremainsclean,otherwisetheblockbecomesdirty.Thisactioncosts1.ThisactionisthesameasUpdateglobal(i,v)exceptthatitistakenwhenvariable[v]isnotincachei.Thenewvalueofvisbroadcastonthebusandisupdatedinallcachescontainingit(andmainmemoryifitsnoops).Thecostofthisactionis1.Ablock-retentionalgorithmrespondstoaREADrequestwithasequenceofactionsterminatedbyeitheraSupplyorSupplythroughaction.Similarly,theresponsetoaWRITErequestisasequenceofactionsendingwithanUpdatelocal,Updateglobal,orUpdatethrough.WewillusethesymbolUpdatetodenoteanyofthesethreetypesofupdateoperations.Wearenowreadytoextractfromthisframeworkseveralspecificmodels.Thesemodelsaredistinguishedby:(i)Whetherthecachesaredirect-mappedorassociative.(ii)WhetherSupplythroughandUpdatethroughareallowed.Ifnot,READi(v)andWRITEi(v)requestscanonlybesatisfiedaftercacheicontainsblock84A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.SleatortoaREADi(v)orWRITEi(v)request.OuralgorithmCompetitiveSnoopyCaching85GeneralSnoopyCaching9Direct-mapped.9UpdatethroughandSupplythroughallowed.Theblock[v]neednotbeplacedincacheitosatisfyaREADi(v)orWRITE~(v)request.9Cachessnooponly86A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.Sleatoradistributedfashion.Weassumethatrequestsaresequential,eventhoughthisisnottrueinaparallelmachine,sincethebusserializesallcommunication.3.LowerBoundsTHEOREM3.1.LetAbeanyon-lineblock-retentionalgorithminamodelwithoutSupplythroughandUpdatethrough.IfthereareatleasttwocachesthenthereisaninfinitesequenceofrequeststrsuchthatCA(O'(n))>--n,andCA(O'(n))~CompetitiveSnoopyCaching87THEOREM3.2.LetAbeanyon-lineblock-retentionalgorithminamodelwithoutSupplythroughandUpdatethroughandwithatleasttwocaches.Foranyon-linealgorithmAthereisanotheron-line88A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.Sleatorruns.Thestatechosenistheonewhichminimizesthecostofthepossiblestatetransitionatthebeginningoftheseruns,plusthecostofprocessingtheremainingrunsinthatstate.2.Ifwhatfollowsisasequenceofzeroormoreconsecutiveshortrunswithtotallengthlessthan6p2-3pfollowedbyalongrun,thenHprocessesthelongruninthestatewhichmakestherequestsinitfree,andprocessestheshortrunsinafixedstate.ThestatechosenfortheshortrunsistheonewhichminimizesthestatetransitioncostsatthebeginningandendoftheserunsplusthecostofprocessingCompetitiveSnoopyCaching89ofcausingthisbuscycle.Consequently,inthefollowingalgorithm,awritetoareplicatedblockreducesacounterinoneoftheothercachessharingtheblock.Whenthecounterreacheszerotheblockisdropped.Whenablockisbroughtintoacacheitscountissettop.Twoinvariantsaremaintainedthatrelatethestateofthecachestothew[i,B]values.First,w[i,B]is0ifandonlyifblockBisnotincachei.Second,ifiisthelastprocessortomodifyadirtyblockBthenw[i,B]=p.AlgorithmDirect-Mapped-Snoopy-Caching;fort:--1tolength(or)doiftr(t)=READi(v)thenB:=Iv];ifw[i,B]=0thenGetblock(i,B);elsew[i,B]:--q,whereqc[w[i,B]...p]fi;Supply(i,v)elsiftr(t)=WRITEi(v)thenB:=[v];ifw[i,B]=0thenGetblock(i,B)elsew[i,B]:=pfi;if3j~is.t.w[LB]#0thenUpdateglobal(i,v);Cd.,c:=Cdsc+1;W[LB]:=w[j,B]-I;ifw[LB]=0thenDrop(LB)fielseUpdatelocal(i,v)fifiodendDirect-Mapped-Snoopy-Caching;ProcedureGetblock(i,B);if3B's.t.hi(B')=hi(B)^w[i,B']#0then{BcollideswithB',sodropB'.}ifw[i,B']=0thenWriteback(i,B');Cd~,.:=Cd,c+pfi;w[i,B']:=0;Drop(i,B')fi;Fetchblock(i,B);Cd~:=Cds,+p;w[i,B]:=pendGetblock;Algorithmdscisunderdeterminedattwopoints:whenw[i,B]isincrementedduringaREADi(v)request,andwhenjischosenduringawritetoareplicatedblock.Itturnsoutthatamortizedanalysisofthealgorithmisinsensitivetothesechoices,soothercriteriamustbeusedtomakethem.AWritebackisdonebythisalgorithmwhenthe90A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.SleatoreffectofthisisthataWritebackmaybedonewhiletheblockisstillreplicated.ThereisnoCompetitiveSnoopyCaching91Aftertheaction(i,B)~SA.ThereforeAqb=w[i,B]-2p-(-w[i,B])---2w[i,B]-2p>--2p.B.TheactionisDrop(i,B):ACA=0andsowemustshowA@_>0.Thisisthereverseofthepreviouscase.Beforetheaction(i,B)~SA,andaftertheaction(i,B)~SA.Thechangeinpotentialis2p-2w[i,B]->0.C.TheactionisWriteback(i,B):ACA=pandsowemustshowA@_>-2p.HereACA=pandA@=0,maintain-ingtheassertion.Ifsteptofrisanactionlabeledonlywithdsc,thenoneofthefollowingcases92THEOREM4.2.andA.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.SleatorForanysequence~andanyon-lineoroff-linealgorithmA,FBCd,,.c(o')-<FBCA(O')+UCA(O-)"-{-k1UCd~c(o-)+WBCd,~,.(o-)-<FBCA(tr)+UCA(O)+k2.Theconstantsklandk2dependontheinitialcachestatesofdscandA.Ifallcachesareinitiallyemptythenklandk2arezero.5.AssociativeCaching.Wenowexamineblock-retentionstrategiesfortheassociativecachemodel.Inthismodelablockcanresideanywhereinthecache.Astrategyintheassociativecachemodelhastheburdenofdecidingwhichblocktodropwhenanewblockisreadintoafullcache,aswellashavingtodecidewhichblockstodropbecauseofwritestoreplicatedblocks.Theproblemofdecidingwhichblocktodropwhenanewblockisreadintoafullcacheisademandpagingproblem.Therefore,inordertoobtaincompetitiveperformanceCompetitiveSnoopyCaching93Wecompareeachoftheon-linealgorithmsdescribedabovewiththerainalgorithm.LetAbeanyalgorithm,nathenumberofpagesoffastmemoryavailabletoA,cra94A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.Sleatorandhenceprovethetheorem.[]CombiningCachingwithPaging.Wemaynowcombinecachingstrategieswithpagingstrategies.First,asanimmediatecorollaryofTheorems4.1and5.1,weobtain:THEOREM5.3.LetAbeanyon-linealgorithmforassociativesnoopycachingwhereeachcachemanagedbyAhassizehA,andeachcachemanagedbyopthassizenora.Thentherearearbitrarilylongsequenceso-suchCompetitiveSnoopyCaching95ProcedureGetblock(i,B);{firstdofifodecrement}forB's.t.w[i,B']#0doa[i,B']:=a[i,B']-1;ifa[i,B']-<0then96A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.Sleatorareusedtoshowthattheinvariants/\nscwfAFBCs~:r(7",t)-[)CompetitiveSnoopyCaching97Ifsteptof~"isanactionlabeledwithbothAandscwf,thenoneofthefollowingcasesholds:A.TheactionisSupply(i,v):CA=C98A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.Sleator6.GeneralSnoopyCaching.Likeassociativecaching,generalsnoopycachingisageneralizationofdirect-mappedsnoopycaching.Herewemaintainthedirect-mappedfeature,CompetitiveSnoopyCaching99w[i,B']:=w[i,B']-1;ifw[i,B']=0thenifB'dirtythenWriteback(i,B'){8}fi;Drop(i,B'){9}fielsifx[i,B]=p100A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.SleatorB.TheactionisDrop(i,B):ACA=0andsowemustshowAqb_>0.Beforethisaction(i,B)~SA.Aftertheaction(i,B)~SA.ThereforeAqb=3(p-w[i,B]-x[i,B])-->0.Thecostoftheoperationis0,sotheassertionisverified.Ifsteptofzisanactionlabeledonlywithgsc,thenoneofthefollowingcasesholds:A.TheactionisFetchblock(i,B){10}:ACg~,.=p,sowemustshowthatAqb_>p.Thecountw[i,B]changesfrom0top,andx[i,B]changesfrompto0.Regardlessofwhether(i,B)~SAornot,Aqb=p.B.TheactionisDrop{6}{9}:ACgsc-O,sowemustshowthatAqb_0.Atbothplacesintheprogramwhereadropisissued,thereisnochangeinpotentialandnocostisincurred.ItremainsforustodealwiththesituationinwhichsteptofzisanactionlabeledwithbothgscandA.TheactiontakenbygscisoneoftheCompetitiveSnoopyCaching101COROLLARY.Algorithmgscis4-competitivePROOF.ForeveryWriteback(i,B)thereisasequenceofactionsleadinguptoitthathaveacostof3p:initiallyw[i,B]=x[i,102A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.Sleatorelsiflast[B]~i{Breplicated,butinotlastwriter}thenw[B]:=0fi;Supply(i,CompetitiveSnoopyCaching1038.LimitedBlockSnoopyCaching.TheblocksnoopycachingmodelpresentedinSection7issometimesunrealistic,sinceitassumescachesaslargeasmemory.In104A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.Sleatorelsifi=last[B]^w[B]=pthenUpdatelocal(i,v)fifiodendLimited-Block-Snoopy-Caching;ProcedureGetblock(i,B);forB's.t.hi(B')=hi(B)^i~Store[B']doifi=last[B']^w[B']=pthenWriteback(i,B');w[B']:=0;C~b~c:=Ct~.~c+p;Store[B']:=Store[B']uReserved[B'];Reserved[B']:=~;last[B]:=-1fi;Drop(i,B');Store[B']:=Store[B']-{i};iflast[B]=ithenlast[B]:=-1fi{thecachelineisnowempty,doread}od;Fetchblock(i,B);wEB]:=0;{Breplicatedbyeveryoneinreservedset}Cibsc:=Cibsc+p;Store[B]:=Store[B]uReserved[B]u{i};Reserved[B]:=0endGetblock;THEOREM8.1.AlgorithmIbscisstrongly2-competitive,thatis,foranysequencetrandanyon-lineoroff-linealgorithmA,Ctbs~(cr)--<2"CA(O")-[-k,wherekisaconstantthatdependsontherelativeinitialcachestatesoflbscandA.Ifbothcachesetsareinitiallyfull,andallblocksaredirty,thenk=O.PROOF.Thepotentialfunction9(t)=•(-w[B])+E(w[B])-•p"nlBcleantoABdirtytoAiisusedtoprovethistheorem.Thequantitynsisthenumberofcachelinesinacache.Thethirdterminthepotentialisusedmerelytoensurethatthepotentialisalwaysnonpositive.NotethatifBisdirtytoA,thenBisalsouniquetoA.Ifsteptof~"isanactionlabeledonlywithA,thenoneofthefollowingcasesholds:A.TheactionisFetchblock(i,B):ACA=pandsowemustshowA~_-2p.ACompetitiveSnoopyCaching105C.TheactionisWriteback(i,B):ACA=pandsowemustshowAqb_>-2p.SinceAgoesfromdirtytoclean,Aqb=-2w[B]_>-2p.IfsteptofrisanactionlabeledonlywithIbsc,thenoneofthefollowingcasesholds:A.TheactionisFetchblock(i,B):ACtb,c=pandsowemustshowAqb_>p.There106A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.Sleatorbus1bus2•GatewaywithCachebu8dFig.1.Agatewayconnection.problembyhavingseveralinterconnectedbuses.Sincecachesattachedtodifferentbusescanshareblocks,theremustbesomemechanismforbusestocommunicatewithoneanother.Theinterconnectionmechanismthatweproposeisagateway.Agatewayconnectsdblocksnoopycachingbuses,actinglikearegularparticipantoneachofthebuses(seeFigure1).Eachofthesebusescanthenbeconnectedtoadditionalbusesviaothergateways.Inthisfashion,treesofbusescanbebuilt.Theoperationofthegatewayisasfollows.Thegatewaysnoopsallofthebuses,keepinginitsmemoryallblocksreplicatedinanyofthem.Thegatewayhandlesareadrequestfromoneofthebusesbyeithersupplyingtherequestedblockorforwardingtherequesttothebuswheretheblockisstored.SharedwritesbyoneofthebusesareforwardedasnecessarytotheotherCompetitiveSnoopyCaching107willtakevaluesintherange[0..d].IfHas[B]=OthenthegatewayitselfisstoringB.OtherwisethevalueofHas[B]isthenumberofthebusonwhichblockBisstored.(ItwillalwaysbethecasethatifmorethanoneofthebusestowhichthegatewayisconnectedstoresB,thensodoesthegateway.)EachbustreatsthegatewayasanordinarycacheinablocksnoopycachingsystemandusesAlgorithmbsetomanagethecaches.(Weletwj[B]andlasO[B]bethew[B]andlast[B]valuesforthejthbusconnectedtothegateway.)Wecallthemultibusalgorithmrob.Wewill108A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.Sleatorsamerequestissuedbyprocessorq.Formally,wedefineC~(~r,J)tobethecostincurredbybusJinexecutingAlgorithmAonsequencecronthesystem~.LEMMA9.1.LetAbeanyon-lineoroff-linealgorithmforprocessingasequencetrofREAD/WRITErequestsonthemultibussystem3~.Thenc9,'(~',s)-<c9,(~,s).PROOF.Weclaimthatareadrequestbyqinor'usesthebusJonlyifthegatewayghadtouseJtosatisfythecorrespondingrequestin~r.Thisisbecauseprocessorqin~'storesallblocksstoredinTwgin~andhencecouldsatisfytherequestlocallyifAhadanyopportunityandwouldhavedonesoon~.AwriterequestbyqforblockBino-needstobeforwardedacrossbusJonlyifsomeprocessoronJisstoringBin~'.SincethatsameprocessorwouldbestoringBin~,thegatewaywouldhavehadtoforwardthatwriterequestacrossbusJanyway,tomaintaincacheconsistency.[]TheeffectofAlgorithmmbwillbetosimulatetheclusteringofTugintoasingleprocessorbymaintainingthefictionthatanyrequestthegatewaygforwardstobusJisinfactissuedbythegatewayitself.Hence,thegatewaywillcreatetheillusion(withrespecttobusJ)ofbeingaCompetitiveSnoopyCaching109suppliesB,andgisanordinaryparticipantonthisbus,thegstoresBaftero'(t).II.Beforeor(t),processorsonbothsidesofthegatewaystoreB(andhence110A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.SleatorThesimplestchoiceforthesystem~isatreeofbuses.Unfortunately,treeshaveverylowbandwidth.ForthisreasonweproposeCompetitiveSnoopyCaching111automatethisprocess.Inparticular,theselectionofthepotentialfunctionseemscriticallydependentonthewaythatweintendtoaccountforwrite-backcosts.Wehavenotyettransformedourskillintoageneraltheoryofcompetitiveness.Suchatheorywouldideallytakeaproblemdescriptionanddetermineifthereexistsastronglycompetitivealgorithmforit,andwouldalsoevaluatethemultiplicativeconstant.Thisisanotherveryinterestingareaforfuturework.Thepracticalsignificance112A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.Sleatorincorrectlythinktheblockisreplicated.Note,however,thatthisbitisconserva-tive,sinceanindicationofnonreplicationisalwayscorrect.InCompetitiveSnoopyCaching113Thusthevaluesofaddr,last,andwneednotbestored,sincetheyeitheraredeterminedbythehashindexorareconstant.ThesharedvariablesofthealgorithminSection8canbesynthesizedfromthesevariables.LetL=Ci[hi(B)];L~>addrmeansdereferenceL,andselecttheaddrfield.Theni~Store[B]~LDaddr=BALDvalid,icReserved[B]-~L[:>addr=BA~LC>valid,i=last[B]=-LDaddr=B^LDlast./Determiningthevalueofw[B]isalittlebitharder.Ifthereisnoisuchthati=last[B],thenw[B]=0.Otherwise,farisuchthati=last[B],w[B]=Ci[h~(B)]~>w.Sincew[B]istestedonlybyi=last[B],thiscanbedonelocally.Thebushasaddress,data,andcommandlines.Thelegalcommandsare:Fetch(B):requestthedataforblock114A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.SleatorRememberthatwhenValue(Bi,v,d)iscalled,foreverycachej~istoringorreservingBi,i.e.,suchthatLj=Cj[hj(Bi)CompetitiveSnoopyCaching115somefairscheduling,agivencachewillonlygetcontrolofthebusinconsecutivecyclesifthebuswouldhavebeenidleanyway.Thus,althoughthetotalbusutilizationis116A.R.Karlin,M.S.Manasse,L.Rudolph,andD.D.SleatorWemaythinkofthesetwofaultsasoccurringsequentially,caseDfollowedbycaseB.D.rainhasapagefault,fwfisignored:AF,,in=1;AErwi=O.Hence,wemustshowAqb_-p.PentersSin,,soA~=a[P]-p+a[P](p-1)=(CompetitiveSnoopyCaching117C.Ahasapagefault:AFmin=1;AF~ro=0.Hence,wemustshowA~_>-n~r,,/(n~c,,-nmin+1).PentersS,,inwhenceA~>_a[P]-n~Y~>_n~.j~,ntiro-118A.R.Karlin,M,S.Manasse,L.Rudolph,andD.D.SleatorwherekisaconstantthatdependsontherelativeinitialcachestatesofbscandA.IfeveryblockisinitiallyCompetitiveSnoopyCaching119C2.Update.Incase(2}w[B]issetto1,andlast[B]ischanged.Thischangeinlast[B]changesthesetsSandLsuchthatBcSbeforethe