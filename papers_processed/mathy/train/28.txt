University of Pennsylvania
ScholarlyCommons
Statistics Papers Wharton Faculty Research
2008
Stochastic Linear Optimization Under Bandit
Feedback
Varsha Dani
University of Chicago
Thomas P. Hayes
Toyota Technological Institute
Sham M. Kakade
University of Pennsylvania
Follow this and additional works at: http://repository.upenn.edu/statistics_papers
Part of the Computer Sciences Commons, and the Statistics and Probability Commons
This paper is posted at ScholarlyCommons. http://repository.upenn.edu/statistics_papers/101
For more information, please contact repository@pobox.upenn.edu.
Recommended Citation
Dani, V., Hayes, T. P., & Kakade, S. M. (2008). Stochastic Linear Optimization Under Bandit Feedback. 21st Annual Conference on
Learning Theory, 355-366. Retrieved from http://repository.upenn.edu/statistics_papers/101
Stochastic Linear Optimization Under Bandit Feedback
Abstract
In the classical stochastic k-armed bandit problem, in each of a sequence of T rounds, a decision maker
chooses one of k arms and incurs a cost chosen from an unknown distribution associated with that arm. The
goal is to minimize regret, defined as the difference between the cost incurred by the algorithm and the
optimal cost. In the linear optimization version of this problem (first considered by Auer [2002]), we view the
arms as vectors in Rn, and require that the costs be linear functions of the chosen vector. As before, it is
assumed that the cost functions are sampled independently from an unknown distribution. In this setting, the
goal is to find algorithms whose running time and regret behave well as functions of the number of rounds T
and the dimensionality n (rather than the number of arms, k, which may be exponential in n or even infinite).
We give a nearly complete characterization of this problem in terms of both upper and lower bounds for the
regret. In certain special cases (such as when the decision region is a polytope), the regret is polylog(T). In
general though, the optimal regret is Θ∗ ( √ T) — our lower bounds rule out the possibility of obtaining
polylog(T) rates in general.
We present two variants of an algorithm based on the idea of “upper confidence bounds.” The first, due to
Auer [2002], but not fully analyzed, obtains regret whose dependence on n and T are both essentially
optimal, but which may be computationally intractable when the decision set is a polytope. The second
version can be efficiently implemented when the decision set is a polytope (given as an intersection of half-
spaces), but gives up a factor of √ n in the regret bound. Our results also extend to the setting where the set of
allowed decisions may change over time.
Disciplines
Computer Sciences | Statistics and Probability
This conference paper is available at ScholarlyCommons: http://repository.upenn.edu/statistics_papers/101
Stochastic Linear Optimization under Bandit Feedback
Varsha Dani∗
and Thomas P. Hayes†
and Sham M. Kakade†
Abstract
In the classical stochastic k-armed bandit problem,
in each of a sequence of T rounds, a decision maker
chooses one of k arms and incurs a cost chosen
from an unknown distribution associated with that
arm. The goal is to minimize regret, defined as the
difference between the cost incurred by the algo-
rithm and the optimal cost.
In the linear optimization version of this problem
(first considered by Auer [2002]), we view the arms
as vectors in Rn
, and require that the costs be lin-
ear functions of the chosen vector. As before, it
is assumed that the cost functions are sampled in-
dependently from an unknown distribution. In this
setting, the goal is to find algorithms whose run-
ning time and regret behave well as functions of
the number of rounds T and the dimensionality n
(rather than the number of arms, k, which may be
exponential in n or even infinite).
We give a nearly complete characterization of this
problem in terms of both upper and lower bounds
for the regret. In certain special cases (such as
when the decision region is a polytope), the regret
is polylog(T). In general though, the optimal re-
gret is Θ∗
(
√
T) — our lower bounds rule out the
possibility of obtaining polylog(T) rates in gen-
eral.
We present two variants of an algorithm based on
the idea of “upper confidence bounds.” The first,
due to Auer [2002], but not fully analyzed, obtains
regret whose dependence on n and T are both es-
sentially optimal, but which may be computation-
ally intractable when the decision set is a polytope.
The second version can be efficiently implemented
when the decision set is a polytope (given as an in-
tersection of half-spaces), but gives up a factor of
√
n in the regret bound.
Our results also extend to the setting where the set
of allowed decisions may change over time.
∗
Department of Computer Science, University of Chicago,
varsha@cs.uchicago.edu
†
Toyota Technological Institute at Chicago,
{hayest,sham}@tti-c.org
1 Introduction
The seminal work of Robbins [1952] introduced a formal-
ism for studying the sequential design of experiments, which
is now referred to as the multi-armed bandit problem. In this
foundational paradigm, at each time step a decision maker
chooses one of K decisions or “arms” (e.g. treatments, job
schedules, manufacturing processes, etc) and receives some
feedback loss only for the chosen decision. In the most un-
adorned model, it is assumed that the cost for each decision
is independently sampled from some fixed underlying (and
unknown) distribution (that is different for each decision).
The goal of the decision maker is to minimize the average
loss over some time horizon. This basic model of decision
making under uncertainty already typifies the conflict be-
tween minimizing the immediate loss and gathering infor-
mation that will be useful in the long-run. This sequential
design problem — often referred to as the stochastic multi-
armed bandit problem — and a long line of successor ban-
dit problems have been extensively studied in the statistics
community (see, e.g., [Berry and Fristedt, 1985]), with close
attention paid to obtaining sharp convergence rates.
While this paradigm offers a formalism to a host of natu-
ral decision problems (e.g. clinical treatment, manufacturing
processes, job scheduling), a vital issue to address for appli-
cability to modern problems is how to tackle a set of feasible
decisions that is often large (or infinite). For example, the
classical bandit problem of clinical treatments (often con-
sidered in statistics) — where each decision is a choice of
one of K treatments — is often better modelled by choosing
from some (potentially infinite) set of mixed treatments sub-
ject to some budget constraint (where there is a cost per unit
amount of each of drug). In manufacturing problems, often
the goal is to maximize revenue subject to choosing among
some large set of decisions that satisfy certain manufactur-
ing constraints (where the revenue from each decision may
be unknown). A modern variant of this problem that is re-
ceiving increasing attention is the routing problem where the
goal is to send packets from A to B and the cost of each route
is unknown (see, e.g., [Awerbuch and Kleinberg, 2004]).
We study a natural extension of the stochastic multi-armed
bandit problem to linear optimization — a problem first con-
sidered in Auer [2002]. Here, we assume the decision space
is an arbitrary subset D ⊂ Rn
and that there is fixed distribu-
tion π over cost functions. At each round, the learner chooses
a decision x ∈ D, then a cost function f(·) : D → [0, 1] is
sampled from π. Only the loss f(x) is revealed to the learner
(and not the function f(·)). We assume that the expected loss
is a fixed linear function, i.e. that E[f(x)] = µ · x, where the
expectation is with respect to f sampled from π (technically,
we make a slightly weaker assumption, precisely stated in
the next section). The goal is to minimize the total loss over
T steps. As is standard, success is measured by the regret
— the difference between the performance of the learner
and that of the optimal algorithm which has knowledge of
π. Note that the optimal algorithm here simply chooses the
best decision with respect to the linear mean vector µ.
Perhaps the most important and natural example in this
paradigm is the (stochastic) online linear programming prob-
lem. Here, D is specified by linear inequality constraints. If
the mean µ were known, then this is simply a linear pro-
gramming problem. Instead, at each round, the learner only
observes noisy feedback of the chosen decision, with respect
to the underlying linear cost function.
1.1 Summary of Our Results and Related Work
Auer [2002] provides the first analysis of this problem. This
paper builds and improves upon the work of Auer [2002] in
a number of ways. A related model was considered by Abe
and Long [1999], where the decision sets are allowed to vary
as a function of the time. Our results can be extended to this
more general model, which we discuss in Section 7.
While Auer [2002] provides an elegant deterministic al-
gorithm, based on upper confidence bounds of µ, an analysis
of the performance of this algorithm was not provided, due to
rather subtle independence issues (though it was conjectured
that this simple algorithm was sufficient). Instead, a more
complicated master algorithm was analyzed — this master
algorithm called the simpler upper confidence algorithm as a
subroutine. In this work, we directly analyze the simpler up-
per confidence algorithm. Unfortunately, implementing this
algorithm in certain cases (when D is large or infinite) may
be inefficient. However, we also provide a modification to
this algorithm (that uses a different confidence region based
on the L1-norm), which may be implemented efficiently for
the case when D is an (infinite) convex set, given certain or-
acle optimization access to D.
The analysis of Auer [2002] achieves a regret bound of
O∗
((log |D|)3/2
poly(n)
√
T) where n is dimension of the
decision space, T is the time horizon, and |D| is the number
of feasible decisions. For the simpler upper confidence algo-
rithm, we show that it enjoys a bound of O∗
(n
√
T), which
does not depend on the cardinality of the decision region,
|D|. While this algorithm may be inefficient in some cases,
we also provide an efficient algorithm (that uses a slightly
different confidence region), which achieves a slightly worse
bound of O∗
(n3/2
√
T). Using the result in Auer [2002], one
can also derive a bound of the form O(poly(n)
√
T) for in-
finite decision sets by appealing to a naive (inefficient) cov-
ering argument (where the algorithm is run on an appropri-
ately fine cover of D). However, this argument results in a
less sharp bound in terms of n 1
, though a better reduction to
1
Using Auer [2002], one can derive the less sharp bound of
O∗
(n5/2
√
T) for arbitrary compact decision sets with two obser-
vations. First, through a covering argument, we need only consider
Auer [2002] may be possible.
For the case of finite decision sets, such as the K-arm
bandit case, a regret that is only logarithmic in the time hori-
zon is achievable. In particular, in a different line of work,
Auer et al. [2002] showed that the optimal regret for the K-
arm bandit case was characterized as K
∆ log T, where ∆ is
the “gap” between the performance of the best arm and the
second best arm. This result is stated in terms of the problem
dependent constant ∆, so one can view it as the asymptotic
regret for a given problem. In fact, historically, there is long
line of work in the K-arm bandit literature (e.g. [Lai and
Robbins., 1985, Agrawal, 1995]) concerned with obtaining
optimal rates for a fixed problem, which are often logarith-
mic in T when stated in terms of some problem dependent
constant.
Hence, in our setting, in the case where |D| is finite, we
know that a log rate in the time is achievable by a direct
reduction to the K-arm bandit case (though this naive reduc-
tion results in an exponentially worse dependence in terms
of |D|). Our work shows that a regret of n2
∆ polylog(T)
can be achieved, where ∆ is a generalized definition of the
gap that is appropriate for a potentially infinite D. Hence, a
polylogarithmic rate in T is achievable with a constant that
is only polynomial in n and has no dependence on the size
of the (potentially infinite) decision region. Here, ∆ can be
thought of as the gap between the values of the best and sec-
ond best extremal points of the decision set (which we de-
fine precisely later). For example, if D is a polytope, then
∆ is the gap in value between the first and second best cor-
ner decisions. For the case where D is finite, ∆ is exactly
the same as in the K arm case. However, for some natural
decision regions, such as a sphere, ∆ is 0 so this (problem
dependent) bound is not applicable. Note that ∆ is never 0
for the K-arm case (unless there is effectively one arm), so a
logarithmic rate in T is always possible in the K-arm case.
Note that this set of results still raises the question of
whether there is an algorithm achieving polylogarithmic re-
gret (as a function of T) for the case when ∆ = 0, which
could be characterized in terms of some different, more ap-
propriate problem dependent constant. Our final contribution
answers this question in the negative. We provide a lower
bound showing that the regret of any algorithm on a particu-
lar problem (which we construct with ∆ = 0) is Ω(n
√
T). In
addition to showing that a polylogarithmic rate is not achiev-
able in general, it also shows our upper bound is tight in
terms of n and T. Note this result is in stark contrast to
the K-arm case where the optimal asymptotic regret for any
given problem is always logarithmic in T.
We should also note that the lower bound in this paper is
significantly stronger than the bound provided in Dani et al.
[2008], which is also Ω(n
√
T). In this latter lower bound,
the decision problem the algorithm faces is chosen as a func-
tion of the time T. In particular, the construction in Dani
et al. [2008] used a decision region which was a hypercube
D to be exponential in n. Second, Auer [2002] assumes that D is a
subset of the sphere, which leads to an additional
√
n factor. To see
this, note the comments in the beginning of Section 5 essentially
show that a general decision region can be thought of as living in
a hypercube (due to the barycentric spanner property), so the addi-
tional
√
n factor comes from rescaling the cube into a sphere.
(so ∆ > 0 as this a polytope) — in fact, ∆ actually scaled
as 1/
√
T. In order to negate the possibility of a polyloga-
rithmic rate for a particular problem, we must hold ∆ = 0
as we scale the time, which we accomplish in this paper
with a more delicate construction using an n-dimensional
decision space constructed out of a Cartesian product of 2-
dimensional spheres.
1.2 The Price of Bandit Information
It is natural to ask how much worse the regret is in the ban-
dit setting as compared to a setting where we received full
information about the complete loss function f(·) at the end
of each round. In other words, what is the price of bandit
information?
For the full information case, Dani et al. [2008] showed
the regret is O∗
(
√
nT) (which is tight up to log factors). In
fact, in the stochastic case considered here, it is not too diffi-
cult to show that, in the full information case, the algorithm
of “do the best in the past” achieves this rate. Hence, as the
regret is O∗
(n
√
T) in the bandit case and O∗
(
√
nT) (both
of which are tight up to log factors), we have characterized
the price of bandit information as
√
n, which is a rather mild
dependence on n for having such limited feedback.
We should also note that the work in Dani et al. [2008]
considers the adversarial case, where the cost functions are
chosen in an arbitrary manner rather than stochastically. Here,
it was shown that the regret in the bandit setting is O(n3/2
√
T)
(ignoring polylogarithmic factors), though it was conjectured
that this bound was loose and the optimal rate should be iden-
tical to rate for the stochastic case, considered here.
It is striking that the convergence rate for the bandit set-
ting is only a factor of
√
n worse than in the full information
case — in stark contrast to the K-arm bandit setting, where
the gap in the dependence on K is exponential (
√
TK vs.
√
T log K). See Dani et al. [2008] for further discussion.
2 Preliminaries
Let D ⊂ Rn
be a compact (but otherwise arbitrary) set of
decisions. Without loss of generality, assume this set is of
full rank. On each round, we must choose a decision xt ∈ D.
Each such choice results in a cost `t = ct(xt) ∈ [−1, 1].
We assume that, regardless of the history Ht, the condi-
tional expectation of ct is a fixed linear function, i.e., for all
x ∈ D,
E (ct(x) | Ht) = µ · x = µ†
x ∈ [−1, 1].
where x ∈ D is arbitrary, and we denote the transpose of any
column vector v by v†
. (Naturally, the vector µ is unknown,
though fixed.) Under these assumptions, the noise sequence,
ηt = ct(xt) − µ · xt
is a martingale difference sequence.
[We remark here that that our earlier assumption that D
was compact was actually unnecessary, in light of our further
assumptions that the cost functions are bounded and linear in
expectation.]
A special case of particular interest is when the cost func-
tions ct are themselves linear functions sampled indepen-
dently from some fixed distribution. Note, however, that
our assumptions are also met under the addition of any time-
dependent unbiased random noise function.
In this paper we address the bandit version of the ge-
ometric optimization problem, where the decision maker’s
feedback on each round is only the actual cost `t = ct(xt)
received on that round, not the entire cost function ct(·).
If x1, . . . , xT are the decisions made in the game, then
define the cumulative regret by
RT =
T
X
t=1
(µ†
xt − µ†
x∗
)
where x∗
∈ D is an optimal decision for µ, i.e.,
x∗
∈ argmin
x∈D
µ†
x
which exists since D is compact. Observe that if the mean
µ were known, then the optimal strategy would be to play
x∗
every round. Since the expected loss for each decision x
equals µ†
x, the cumulative regret is just the difference be-
tween the expected loss of the optimal algorithm and the ex-
pected loss for the actual decisions xt. Since the sequence of
decisions x1, . . . , xT may depend on the particular sequence
of random noise encountered, RT is a random variable. Our
goal in designing an algorithm is to keep RT as small as pos-
sible.
It is also important for us to make use of a barycentric
spanner for D as defined in Awerbuch and Kleinberg [2004].
A barycentric spanner for D is a set of vectors b1, . . . , bn, all
contained in D, such that every vector in D can be expressed
as a linear combination of the spanner with coefficients in
[−1, 1]. Awerbuch and Kleinberg [2004] showed that such
a set exists for compact sets D. We assume we have access
to such a spanner of the decision region, though an approxi-
mate spanner would suffice for our purposes (Awerbuch and
Kleinberg [2004] provide an efficient algorithm for comput-
ing an approximate spanner).
Let A be a positive definite n×n matrix, and let ν ∈ Rn
.
We will use the following notation for the 1- and 2-norms
based on A.
kνk2,A := kA1/2
νk2 =
√
ν†Aν.
kνk1,A := kA1/2
νk1 =
n
X
i=1
|A1/2
ν|i.
Here A1/2
is the unique positive definite n×n matrix whose
square is A.
3 Main Results
3.1 Algorithms
We now present our main algorithms, ConfidenceBall2 and
ConfidenceBall1. The subscripts on the names refer to the
type of norm used in the algorithm; apart from scaling the
radius differently, which we do only for convenience, this is
the sole difference between the algorithm statements. As we
shall discuss later, we are able to prove better regret guaran-
tees for ConfidenceBall2, matching the lower bound, up to
log factors.
Both algorithms can be efficiently implemented in the
simplistic case when the decision set is a small finite set.
Algorithm 3.1: CONFIDENCEBALL2(D, δ)
Initialization:
Find a barycentric spanner b1, . . . , bn for D
A1 =
Pn
i=1 bib†
i
b
µ1 = 0
for t ← 1 to ∞
βt = max

128n ln t ln(t2
/δ),

8
3 ln

t2
δ
2

B2
t =

ν : kν − b
µtk2,At ≤
√
βt
xt = argmin
x∈D
min
ν∈B2
t
(ν†
x)
Incur and observe loss `t := ct(xt)
At+1 = At + xtx†
t
b
µt+1 = A−1
t+1
Pt
τ=1 `τ xτ
However, in the important special case when the decision
set is a polytope presented as the intersection as halfspaces,2
ConfidenceBall1 can be implemented in polynomial time,
while ConfidenceBall2 is NP-hard to implement, at least for
some decision sets. More generally, ConfidenceBall1 can be
implemented efficiently given oracle access to an algorithm
which can find a decision in argminx∈D ν ·x (where ν is the
input). We discuss these issues further in Subsection 3.4.
ConfidenceBall2
Algorithm 3.1 is due to Auer [2002], who called it the LinRel
algorithm. We have generalized the statement slightly so that
it can be applied in settings where D is not necessarily stored
in enumerated form, and indeed, may not even be finite. We
have renamed the algorithm ConfidenceBall2 to emphasize
its key feature of maintaining an `2 ball, B2
t , which contains
µ with high probability.
The algorithm is motivated as follows. Suppose deci-
sions x1, . . . xt−1 have been made, incurring corresponding
losses `1, . . . , `t−1. Then a reasonable estimate b
µ to the true
mean cost vector µ can be constructed by minimizing the
square loss:
b
µ := argmin
ν
L(ν), where L(ν) :=
X
τ<t
ν†
xτ − `τ
2
.
Defining A =
P
xτ x†
τ , we have that the least squares esti-
mator is
b
µ = A−1
X
τ<t
`τ xτ .
A natural confidence region for µ is the set of ν for which
L(ν) exceeds L(b
µ) by at most some amount β, i.e. the set
{ν : L(ν) − L(b
µt) ≤ β}
It is straightforward to see that:
L(ν) − L(b
µ) = (ν − b
µ)†
A(ν − b
µ)
Thus the confidence region proposed above has the shape
of an ellipsoid centered on b
µ, where the axes are defined
2
Note that the number of vertices of a polytope may be expo-
nential in the number of defining half-spaces.
Algorithm 3.2: CONFIDENCEBALL1(D, δ)
Initialization:
Find a barycentric spanner b1, . . . , bn for D
A1 =
Pn
i=1 bib†
i
b
µ1 = 0
for t ← 1 to ∞
βt = max

128n ln t ln(t2
/δ),

8
3 ln

t2
δ
2

B1
t =

ν : kν − b
µtk1,At ≤
√
nβt
xt = argmin
x∈D
min
ν∈B1
t
(ν†
x)
Incur and observe loss `t := ct(xt)
At+1 = At + xtx†
t
b
µt+1 = A−1
t+1
Pt
τ=1 `τ xτ
through A. This set is commonly referred to as the set of
vectors ν with bounded Mahalanobis distance with respect
to mean b
µ and covariance matrix A−1
.
A difficulty with the above reasoning is that we have im-
plicitly assumed that A is invertible, which is clearly false
for t < n. Under a slight alteration, define the estimator b
µt
at time t by
b
µt = A−1
t
X
τ<t
`τ xτ .
where At is now defined as
At =
n
X
i=1
bib†
i +
X
τ<t
xτ x†
τ
where b1, . . . , bn is the barycentric spanner (see Preliminar-
ies for the definition). It is easily seen that At is positive
definite (and hence invertible), since the spanner is linearly
independent. Intuitively, the first term in At (the sum of
outerproducts of the spanner vectors) is a natural initializa-
tion of the confidence region, as it imposes uncertainty along
the directions in which D varies most (namely the span-
ner directions). Our proofs effectively show that an approx-
imate spanner would suffice instead. Note that b
µt is the
least squares estimator for the sampled data if we pretend
that decisions b1, . . . , bn were selected on fictitious rounds
t = −n + 1, . . . , t = 0 and all incurred loss 0.
Now define the confidence region at time t to be the el-
lipsoid
B2
t := {ν : kν − b
µtk2,At
≤
p
βt}
In the proofs, we show that, with our choice of βt, µ always
remains inside this ellipsoid for all times t, with high proba-
bility.
The decision at the next round is then the greedy opti-
mistic decision:
xt = argmin
x∈D
min
ν∈B2
t
(ν†
x).
Again, this exists since D is compact.
It should be remarked that although the linear function
x 7→ µ · x is a feasible cost function, and b
µt is an approxi-
mation to µ, the function x 7→ b
µt ·x may be far from being a
feasible (i.e. [−1, 1]-valued) cost function on D — however,
it is bounded in [−n, n].
ConfidenceBall1
ConfidenceBall1, Algorithm 3.2, uses a (skewed) octahedron,
B1
t , as its confidence region, rather than the ellipsoid, B2
t .
The radius of B1
t has been set just large enough that it con-
tains the ellipsoid B2
t as an inscribed subset.
The cost of this enlarged confidence region is a slightly
worse regret (in terms of n). The benefit we get in exchange
is that balls in the 1-norm have only 2n extremal points,
rather than the infinitely many that balls in the 2-norm have.
This leads to a more computationally efficient algorithm, as
we discuss in Section 3.4.
3.2 Upper Bounds
In the traditional K-arm bandit literature, the regret is often
characterized for a particular problem in terms of T, K, and
problem dependent constants. In the K-arm bandit results
of Auer et al. [2002], this problem dependent constant is the
“gap” between the loss of the best arm and the second best
arm.
We cannot naively use the same definition since if the
decision space is, say a convex set, then there is no well de-
fined notion of second best arm. Instead, we define the gap
as follows. Let E denote the set of extremal points of the
decision set D, where an extremal point of D is defined as
a point which is not a proper convex combination of points
in D. It is easy to see that any linear loss function on D
always attains its minimum value at a point in E. It is not
too difficult to show that ConfidenceBall2 always plays ex-
tremal points, due to the strict convexity of the confidence
region. Similarly, although ConfidenceBall1 can potentially
play non-extremal points xt, it can easily be implemented so
that it only plays extremal points (see Section 3.4 for further
discussion of implementation issues.)
Now define the set of suboptimal extremal points as:
E− = {x ∈ E : µ · x > µ · x∗
},
and note that E− is non-empty (unless µ = 0, in which case
there is nothing to prove). Define the gap, ∆, as
∆ = inf
x∈E−
µ · x − µ · x∗
so the ∆ is just the difference in costs between the opti-
mal and next to optimal decision among the extremal points.
Note that if D is a fixed polytope then ∆ > 0. However, if
D is a ball then ∆ = 0, as all points on the surface (a sphere)
are extremal — so infx∈E− µ · x = µ · x∗
(and no point in
E− achieves this value).
We now state the first upper bound, which is a problem
dependent bound stated in terms of ∆.
Theorem 1 (Problem Dependent Upper Bound) Recall that
βT = max

128n ln T ln(T2
/δ),

8
3 ln

T 2
δ
2

. Let 0 <
δ < 1. Suppose the decision set D and the true mean µ have
a gap ∆ > 0. We have:
• ConfidenceBall2: For all sufficiently large T, the cu-
mulative regret RT of ConfidenceBall2(D,δ) is with high
probability at most O(n2
∆ log3
T). More precisely,
Prob

∀T, RT ≤
8nβT ln(T)
∆

≥ 1 − δ,
• ConfidenceBall1: If ConfidenceBall1 is implemented
so that it only chooses extremal points xt ∈ D (which
is always possible) then, for all sufficiently large T, the
cumulative regret RT of ConfidenceBall1(D,δ) is with
high probability at most O(n3
∆ log3
T). More precisely,
Prob

∀T, RT ≤
8n2
βT ln(T)
∆

≥ 1 − δ,
Analogous to the K-arm case, when ∆ > 0, a polylog-
arithmic rate in T is achievable with a constant that is only
polynomial in n and has no dependence on the size of the
decision region.
The following upper bound is stated without regard to
the specific parameter ∆ for a given problem. Furthermore,
it also holds for the case when ∆ = 0.
Theorem 2 (Problem Independent Upper Bound) Recall that
βT = max

128n ln T ln(T2
/δ),

8
3 ln

T 2
δ
2

. Let 0 <
δ < 1. We have:
• ConfidenceBall2: For all sufficiently large T, the cu-
mulative regret RT of ConfidenceBall2(D,δ) is with high
probability at most O∗
(n
√
T), where the O∗
notation
hides a polylogarithmic dependence on T. More pre-
cisely,
Prob

∀T, RT ≤
p
8nTβT ln T

≥ 1 − δ .
• ConfidenceBall1: For all sufficiently large T, the cu-
mulative regret RT of ConfidenceBall1(D,δ) is with high
probability at most O∗
(n3/2
√
T), where the O∗
nota-
tion hides a polylogarithmic dependence on T. More
precisely,
Prob

∀T, RT ≤
p
8n2TβT ln T

≥ 1 − δ .
The following subsection shows our bound of O∗
(n
√
T)
is tight, in terms of both n and T. Also, as mentioned in
the Introduction, tightly characterizing the dimensionality
dependence allows us to show that the price of bandit in-
formation is Θ∗
(
√
n).
3.3 Lower Bounds
Note that our upper bounds still leave open the possibility
that there is a polylogarithmic regret (as a function of T) for
the case when ∆ = 0, which could be characterized in terms
of some different, more appropriate problem dependent con-
stant. Our next result is a lower bound of Ω(n
√
T) on the
expected regret, showing that no such improvement is possi-
ble.
For the lower bound, we must consider a decision region
with ∆ = 0, which rules out polytopes and finite sets (so the
decision region of a hypercube, used by Dani et al. [2008],
is not appropriate here. See Introduction for further discus-
sion). The decision region is constructed as follows. Assume
n is even. Let Dn = (S1
)n/2
be the Cartesian product of n/2
circles. That is, Dn = {(x1, . . . , xn): x2
1 + x2
2 = x2
3 + x2
4 =
· · · = x2
n−1 + x2
n = 1}. Observe that Dn is a subset of the
intersection of the cube [−1, 1]n
with the sphere of radius
p
n/2 centered at the origin.
Our cost functions take values in {−1, +1}, and for ev-
ery x ∈ Dn, the expected cost is µ · x, where nµ ∈ Dn.
Since each cost function is only evaluated at one point, any
two distributions over {−1, +1}-valued cost functions with
the same value of µ are equivalent for the purposes of our
model.
Theorem 3 (Lower Bound) If µ is chosen uniformly at ran-
dom from the set Dn/n, and the cost for each x ∈ Dn is
in {−1, +1} with mean µ · x, then, for every (randomized)
algorithm, for every T ≥ max{256, n2
/16},
E RT = E
µ
E (RT | µ) ≥
1
2304
n
√
T.
where the inner expectation is with respect to observed costs.
In addition to showing that a polylogarithmic rate is not
achievable in general, this bound shows our upper bound is
tight in terms of n and T. Again, contrast this with the K-
arm case where the optimal asymptotic regret for any given
problem is always logarithmic in T.
3.4 Computational Efficiency
We now turn our attention to the computational complexity
of implementing the ConfidenceBall algorithms.
As discussed in Section 2, it is easy to find an approx-
imate barycentric spanner in O(n2
) time. Of all the other
steps in the algorithm, the only one which poses serious dif-
ficulties is the selection of the decision xt:
xt := argmin
x∈D
min
ν∈Bt
(ν†
x)
where Bt is the confidence ball.
Now, if |D| is small, we can enumerate all choices for
x, and the inner minimization is easy for both norms. This
shows that an implementation in time poly(n)|D| is possi-
ble. There are also some special cases, such as when D is
the unit ball, when the algorithm can be implemented in time
poly(n) using a little calculus, despite |D| being infinite. We
leave the details as an exercise to the interested reader.
The most practically relevant setting is when D is (the
vertex set of) a polytope defined by a system of linear in-
equalities (or equivalently, the intersection of a given set of
halfspaces). In this case, the number of vertices of D may be
exponential in the number of inequalities.
In this setting (and others), we can assume oracle ac-
cess to an algorithm which can efficiently find a decision in
argminx∈D ν · x (where ν is the input). Here, in the case of
ConfidenceBall1, we can enumerate over the 2n vertices of
Bt to find the optimum. For each such ν ∈ Bt, we can call
this oracle to find the optimal x ∈ D, and then we can choose
the appropriate decision out of these 2n decisions. Thus, the
decision can be found in O(n) calls to this oracle.
On the other hand, for ConfidenceBall2, the minimiza-
tion problem can easily be seen as polynomial-time equiv-
alent to the negative definite linearly constrained quadratic
programming problem
minimize − kν − b
µtk2
2,At
subject to Mx ≤ b and ν†
x ≥ C,
where Mx ≤ b is the system defining the decision set D,
and C is a real parameter. Since Sahni [1974] proved that
solving such programs is NP-hard, ConfidenceBall2 may not
be computationally practical for large n.
4 Concentration of Martingales
In our analysis, we use the following Bernstein-type concen-
tration inequality for martingale differences, due to Freed-
man [1975] (see also [McDiarmid, 1998, Theorem 3.15]).
Theorem 4 (Freedman) Suppose X1, . . . , XT is a martin-
gale difference sequence, and b is an uniform upper bound
on the steps Xi. Let V denote the sum of conditional vari-
ances,
V =
n
X
i=1
Var (Xi | X1, . . . , Xi−1).
Then, for every a, v > 0,
Prob
X
Xi ≥ a and V ≤ v

≤ exp

−a2
2v + 2ab/3

.
5 Upper Bound Analysis
Throughout the proof, without loss of generality, assume that
the barycentric spanner is the standard basis ~
e1 . . .~
en (this
just amounts to a choice of a coordinate system, where we
identify the spanner with the standard basis). Hence, the de-
cision set D is a subset of the cube [−1, 1]n
. In particular,
this implies kxk ≤
√
n for all x ∈ D. This is really only
a notational convenience; the problem is stated in terms of
decisions in an abstract vector space, and expected costs in
its dual, with no implicit standard basis.
In establishing the upper bounds there are two main the-
orems from which the upper bounds follow. The first is in
showing that the confidence region is appropriate. Let E be
the event that for every time t ≤ T, the true mean µ lies in
the confidence region, B2
t or B1
t . The following shows that
event E occurs with high probability. More precisely,
Theorem 5 (Confidence) Let δ > 0.
• For ConfidenceBall2,
Prob ∀t, µ ∈ B2
t

≥ 1 − δ.
• For ConfidenceBall1,
Prob ∀t, µ ∈ B1
t

≥ 1 − δ.
Section 5.2 is devoted to establishing this confidence bound.
In essence, the proof seeks to understand the growth of the
quantity (b
µt −µ)†
At(b
µt −µ), which involves a rather techni-
cal construction of a martingale (using the matrix inversion
lemma) along with a careful application of Freedman’s in-
equality (Theorem 4).
The second main step in analyzing ConfidenceBall2 is
to show that as long as the aforementioned high-probability
event holds, we have some control on the growth of the re-
gret. The following bounds the sum of the squares of instan-
taneous regret.
Theorem 6 (Sum of Squares Regret Bound) Let
rt = µ · xt − µ · x∗
denote the instantaneous regret acquired by the algorithm on
round t.
• For ConfidenceBall2, if µ ∈ B2
t for all t ≤ T, then
T
X
t=1
r2
t ≤ 8nβT ln T
• For ConfidenceBall1, if µ ∈ B1
t for all t ≤ T, then
T
X
t=1
r2
t ≤ 8n2
βT ln T
This is proven in Section 5.1. The idea of the proof in-
volves a potential function argument on the log volume (i.e.
the log determinant) of the “precision matrix” At (which
tracks how accurate our estimates of µ are in each direction).
The proof involves relating the growth of this volume to the
regret.
At this point the proofs of Theorems 1 and 2 diverge. To
show the former, we use the gap to bound the regret in terms
of
PT
t=1 r2
t . For the latter, we simply appeal to the Cauchy-
Schwarz inequality.
Using these two results we are able to prove our upper
bounds as follows.
Proof:[Proof of Theorem 1] We only prove the result for
ConfidenceBall2, as the proof for ConfidenceBall1 is analo-
gous. Let us analyze rt = µ · xt − µ · x∗
, the regret on round
t. Since ConfidenceBall2 always chooses a decision from E,
either µ · xt = µ · x∗
or xt ∈ E−, so that µ · xt − µ · x∗
≥ ∆.
Since ∆ > 0 it follows that either rt = 0 or rt/∆ ≥ 1 and
in either case,
rt ≤
r2
t
∆
By Theorem 6, we see that if µ ∈ B2
t , then
RT =
T
X
t=1
rt
≤
T
X
t=1
r2
t
∆
≤
8nβT ln T
∆
Applying Theorem 5, we see that this occurs with probability
at least 1 − δ, which completes the proof.
Proof:[Proof of Theorem 2] We only prove the result for
ConfidenceBall2, as the proof for ConfidenceBall1 is anal-
ogous. By Theorems 5 and 6, we know that with probability
at least 1 − δ,
PT
t=1 r2
t ≤ 8nβT ln T. Applying the Cauchy-
Schwarz inequality, we have, with probability at least 1 − δ
RT =
T
X
t=1
rt
≤ T
T
X
t=1
r2
t
!1/2
≤
p
8nTβT ln T
which completes the proof.
We now provide the proofs of these two theorems.
5.1 Proof of Theorem 6
In this section, we prove Theorem 6, which says that the sum
of the squares of the instantaneous regrets of the algorithm
is small, assuming the evolving confidence balls always con-
tain the true mean µ. A key insight is that on any round t
in which µ ∈ B2
t , the instantaneous regret is at most the
“width” of the ellipsoid in the direction of the chosen deci-
sion. Moreover, the algorithm’s choice of decisions forces
the ellipsoids to shrink at a rate that ensures that the sum of
the squares of the widths is small. We now formalize this.
Lemma 7 Let x ∈ D. Then
• For ConfidenceBall2, if ν ∈ B2
t and x ∈ D. Then
|(ν − b
µt)†
x| ≤
q
βtx†A−1
t x
• For ConfidenceBall1, if ν ∈ B1
t and x ∈ D. Then
|(ν − b
µt)†
x| ≤
q
nβtx†A−1
t x
Proof: Unless explicitly stated, all norms refer to the `2
norm. For ConfidenceBall2,
|(ν − b
µt)†
x| = |(ν − b
µt)†
A
1/2
t A
−1/2
t x|
= |(A
1/2
t (ν − b
µt))†
A
−1/2
t x|
≤ kA
1/2
t (ν − b
µt)kkA
−1/2
t xk
.... by Cauchy-Schwarz
= kA
1/2
t (ν − b
µt)k
q
x†A−1
t x
≤
q
βtx†A−1
t x
where the last inequality holds since ν ∈ B2
t .
For ConfidenceBall1,
|(ν − b
µt)†
x| ≤ kA
1/2
t (ν − b
µt)k1kA
−1/2
t xk∞
.... by Holder’s Inequality
≤ kA
1/2
t (ν − b
µt)k1kA
−1/2
t xk2
≤
q
nβtx†A−1
t x
where the last inequality holds since ν ∈ B1
t .
Define
wt :=
q
x†
t A−1
t xt
which we interpret as the “normalized width” at time t in the
direction of the chosen decision. The true width, 2
√
βtwt,
turns out to be an upper bound for the instantaneous regret.
Lemma 8 Fix t.
• For ConfidenceBall2, if µ ∈ B2
t , then
rt ≤ 2 min (
p
βtwt, 1)
• For ConfidenceBall1, if µ ∈ B1
t , then
rt ≤ 2 min (
p
nβtwt, 1)
Proof: Let µ̃ ∈ B2
t denote the vector which minimizes the
dot product µ̃†
xt. By choice of xt, we have
µ̃†
xt = min
ν∈B2
t
min
x∈D
ν†
x ≤ µ†
x∗
,
where the inequality used the hypothesis µ ∈ B2
t . Hence,
rt = µ†
xt − µ†
x∗
≤ (µ − µ̃)†
xt
= (µ − b
µt)†
xt + (b
µt − µ̃)†
xt
≤ 2
p
βtwt
where the last step follows from Lemma 7 since µ̃ and µ are
in B2
t . Since `t ∈ [−1, 1], rt is always at most 2 and the
result follows. The proof for ConfidenceBall1 is analogous.
Next we show that the sum of the squares of the widths
does not grow too fast.
Lemma 9 We have for all t
t
X
τ=1
min (w2
τ , 1) ≤ 2n ln t.
The following two facts prove useful to this end.
Lemma 10 For every t ≤ T,
det At+1 =
t
Y
τ=1
(1 + w2
t ).
Proof: By the definition of At+1, we have
det At+1 = det(At + xtx†
t )
= det(A
1/2
t (I + A
−1/2
t xtx†
t A
−1/2
t )A
1/2
t )
= det(At) det(I + A
−1/2
t xt(A
−1/2
t xt)†
)
= det(At) det(I + vtv†
t ),
where vt := A
−1/2
t xt. Now observe that v†
t vt = w2
t and
(I + vtv†
t )vt = vt + vt(v†
t vt) = (1 + w2
t )vt
Hence (1 + w2
t ) is an eigenvalue of I + vtv†
t . Since vtv†
t is a
rank one matrix, all the other eigenvalues of I + vtv†
t equal
1. It follows that det(I + vtv†
t ) is (1 + w2
t ), and so
det At+1 = (1 + w2
t ) det At.
Recalling that A1 is the identity matrix, the result follows by
induction.
Lemma 11 For all t, det At ≤ tn
.
Proof: The rank one matrix xtx†
t has x†
t xt = kxtk2
as its
unique non-zero eigenvalue. Also, since we have identified
the spanner with the standard basis, we have
Pn
i=1 bib†
i = I.
Since the trace is a linear operator, it follows that
trace At = trace I +
X
τ<t
xtx†
t
!
= n +
X
τ<t
trace(xtx†
t )
= n +
X
τ<t
kxτ k2
≤ nt.
Now, recall that trace At equals the sum of the eigenvalues
of At. On the other hand, det(At) equals the product of the
eigenvalues. Since At is positive definite, its eigenvalues are
all positive. Subject to these constraints, det(At) is maxi-
mized when all the eigenvalues are equal; the desired bound
follows.
Proof:[Proof of Lemma 9]
Using the fact that for 0 ≤ y ≤ 1, ln(1 + y) ≥ y/2, we
have
t
X
τ=1
min(w2
τ , 1) ≤
t
X
τ=1
2 ln(1 + w2
τ )
= 2 ln(det At+1)
≤ 2n ln t
by Lemmas 10 and 11
Finally, we are ready to prove that if µ always stays within
the evolving confidence region, then our regret is under con-
trol.
Proof:[Proof of Theorem 6] Assume that µ ∈ B2
t for all t.
Then
T
X
t=1
r2
t ≤
T
X
t=1
4βt min(w2
t , 1) by Lemma 8
≤ 4βT
T
X
t=1
min(w2
t , 1) since 1 < β1 < · · · < βT
≤ 8βT n ln T by Lemma 9 .
The proof for Confidenceball1 is analogous.
5.2 Proof of Theorem 5
In this section, we prove Theorem 5, which states that with
high probability, for all t, the true mean µ lies in the confi-
dence ball Bt.
Recall that
ηt := ct(xt) − µ†
xt = `t − E (`t | Ht)
where Ht denotes the complete history of the game on rounds
1, . . . , t − 1, that is, the σ-algebra generated by `1, . . . , `t−1.
For either algorithm, we will analyze the quantity:
Zt := (b
µt − µ)†
At(b
µt − µ)
which measures the error of b
µt as an approximation to the
true mean, µ, under the norm induced by At.
We will show that, with probability greater than 1 − δ,
Zt ≤ βt for all t for either algorithm. For ConfidenceBall2,
this directly implies that µ ∈ B2
t . For ConfidenceBall1, note
that
||A
1/2
t (b
µt − µ)||1 ≤
√
n||A
1/2
t (b
µt − µ)||2 =
p
nZt
so if Zt ≤ βt then µ ∈ B1
t .
The next lemma bounds the growth of Zt.
Lemma 12 For all t,
Zt ≤ n + 2
t−1
X
τ=1
ητ
x†
τ (b
µτ − µ)
1 + w2
τ
+
t−1
X
τ=1
η2
τ
w2
τ
1 + w2
τ
.
Proof: For notational convenience, define:
Yt = At(b
µt − µ)
We have the following relations:
Zt = Y †
t A−1
t Yt
Yt =
X
τ<t
ητ xτ − µ
Yt+1 = Yt + ηtxt
which are immediate from the definitions of At, b
µt, and ηt.
Now examining the growth of Zt, we have:
Zt+1 = Y †
t+1A−1
t+1Yt+1
= (Yt + ηtxt)†
A−1
t+1(Yt + ηtxt)
= Y †
t A−1
t+1Yt + 2ηtx†
t A−1
t+1Yt + η2
t x†
t A−1
t+1xt (1)
Applying the matrix inversion lemma to A−1
t+1, we note that:
A−1
t+1 = (At + xtx†
t )−1
= A−1
t −
A−1
t xtx†
t A−1
t
1 + x†
t A−1
t xt
= A−1
t −
A−1
t xtx†
t A−1
t
1 + w2
t
We can use this to bound the three terms of (1) as follows.
For the first term,
Y †
t A−1
t+1Yt = Y †
t A−1
t Yt −
(Y †
t A−1
t xt)2
1 + w2
t
≤ Zt.
For the second term,
2ηtx†
t A−1
t+1Yt = 2ηtx†
t A−1
t Yt − 2ηt
x†
t A−1
t xtx†
t A−1
t Yt
1 + w2
t
= 2ηtx†
t A−1
t Yt − 2ηt
w2
t x†
t A−1
t Yt
1 + w2
t
= 2ηt
x†
t A−1
t Yt
1 + w2
t
= 2ηt
x†
t (b
µt − µ)
1 + w2
t
For the third term,
η2
t x†
t A−1
t+1xt = η2
t w2
t − η2
t
w4
t
1 + w2
t
= η2
t
w2
t
1 + w2
t
Putting these together, we have shown
Zt+1 ≤ Zt + 2ηt
x†
t (b
µt − µ)
1 + w2
t
+ η2
t
w2
t
1 + w2
t
.
By induction, it follows that
Zt ≤ Z1 + 2
t−1
X
τ=1
ητ
x†
τ (b
µτ − µ)
1 + w2
τ
+
t−1
X
τ=1
η2
τ
w2
τ
1 + w2
τ
.
Finally, we check that Z1 ≤ n. To see this, recall from the
algorithm that A1 = I and b
µ1 = 0. Also, since ~
e1, . . . , ~
en ∈
D, by assumption, µ · ~
ej ∈ [−1, 1].
Z1 = (b
µ1 − µ)†
A1(b
µ1 − µ)
= kµk2
=
n
X
j=1
(µ†
~
ej)2
≤ n.
This completes the proof.
We now define a useful martingale difference sequence.
First, it is convenient to define an “escape event” Et as:
Et = I{Zτ ≤ βτ for all τ ≤ t} = I{µ ∈ Bτ for all τ ≤ t}
where I{·} is the indicator function.
Lemma 13 Define a random variable Mt by
Mt = 2ηtEt
x†
t (b
µt − µ)
1 + w2
t
.
Then Mt is a martingale difference sequence with respect to
the sequence of game histories Ht.
Proof: To see that Mt is a martingale difference sequence,
note that:
E (Mt | Ht) = 2Et
x†
t (b
µt − µ)
1 + w2
t
E (ηt | Ht)
= 0
since the history Ht fully determines x1, . . . , xt, b
µ1, . . . , b
µt,
Z1, . . . , Zt, and E1, . . . , Et, and since the noise functions ηt
are a martingale difference sequence with respect to Ht.
We show that with high probability, the associated mar-
tingale,
Pt
τ=1 Mτ , never grows too large.
Lemma 14 Given δ < 1,
Prob ∀t,
t−1
X
τ=1
Mτ ≤ βt/2
!
≥ 1 − δ,
We defer the proof to Section 5.2.1. Equipped with this
lemma, we can prove Theorem 5.
Proof:[Proof of Theorem 5] It suffices to show that the high-
probability event described in Lemma 14 is contained in the
support of Et for every t. We prove the latter by induction
on t.
By Lemma 12 and the definition of β1, we know that
Z1 ≤ n < β1. Hence E1 is always 1 (equivalently, µ is
always in B1).
Now suppose the high-probability event of Lemma 14
holds, so in particular,
t−1
X
τ=1
Mτ ≤ βt/2.
By inductive hypothesis, Eτ = 1 for τ ≤ t − 1. Hence by
Lemma 12 we have
Zt ≤ n + 2
t−1
X
τ=1
ητ
x†
τ (b
µτ − µ)
1 + w2
τ
+
t−1
X
τ=1
η2
τ
w2
τ
1 + w2
τ
= n +
t−1
X
τ=1
Mτ +
t−1
X
τ=1
η2
τ
w2
τ
1 + w2
τ
≤ n + βt/2 +
t−1
X
τ=1
η2
τ
w2
τ
1 + w2
τ
≤ n + βt/2 +
t−1
X
τ=1
min(w2
τ , 1) since |ητ | ≤ 1
≤ n + βt/2 + 2n ln t by Lemma 9
≤ βt.
Thus we have shown Et = 1, completing the induction.
5.2.1 Concentration
All that remains to complete the proof now is to show that
our martingale
Pt
1 Mτ has good concentration properties.
As we show, the step sizes |Mt| are uniformly bounded so
that an application of the Hoeffding-Azuma inequality would
bound the probability that
Pt
1 Mτ grows too large. Unfortu-
nately, the bound thus obtained translates into a regret bound
of T3/4
, which is not good enough for our purpose.
Instead we use Theorem 4, which allows us to to bound
the step sizes in terms of random variables, as long as the
conditional variances remain under control.
Proof:[Proof of Lemma 14] Let us first obtain upper bounds
on the step sizes of our martingale.
|Mt| = 2|ηt|Et
|x†
t (b
µt − µ)|
1 + w2
t
≤ 2|ηt|Et
q
βtx†
t A−1
t xt
1 + w2
t
= 2|ηt|Et
wt
√
βt
1 + w2
t
≤ 2|ηt|Et
p
βt min(wt, 1/2) (2)
where the first inequality follows trivially when Et = 0, and
by Lemma 7 when Et = 1. Additionally this gives a family
of uniform upper bounds:
|Mτ | ≤
p
βt for all τ ≤ t
since |ηt| ≤ 1 and (by choice) βτ is a non-decreasing se-
quence.
Next we bound the sum of the conditional variances of
our martingale. Note that (min (wt, 1/2))2
= min (w2
t , 1/4)
Vt :=
t
X
τ=1
Var (Mτ | M1 . . . Mτ−1)
≤
t
X
τ=1
4|ητ |2
Eτ βτ min (w2
τ , 1/4) by (2)
≤ 4(max
τ≤t
βτ )
t
X
τ=1
Eτ min(w2
τ , 1) since |ητ | ≤ 1
≤ 4βt
X
τ≤t
Eτ min(w2
τ , 1)
≤ 8βtn ln (max{τ ≤ t: Eτ = 1}) by Lemma 9
≤ 8βtn ln t
Since we have established that the sum of conditional
variances, Vt, is always bounded by 8βtn ln t, we can apply
Theorem 4 with parameters a = βt/2, b =
√
βt and v =
8nβt ln t, to get
Prob
t−1
X
τ=1
Mτ ≥ βt/2
!
= Prob
t−1
X
τ=1
Mτ ≥ βt/2 and Vt ≤ 8nβt ln t
!
≤ exp

−(βt/2)2
2(8nβt ln t) + 2
3 (βt/2)(
√
βt)

= exp

−βt
64n ln t + 4
3
√
βt

≤ max

exp

−βt
128n ln t

, exp

−3
√
βt
8

≤
δ
t2
where the last inequality follows from the definition of βt.
Finally, we apply a union bound to get
Prob
t−1
X
τ=1
Mτ ≥
βt
2
for some t
!
≤
∞
X
t=1
Prob
t−1
X
τ=1
Mτ ≥
βt
2
!
≤
∞
X
t=2
δ
t2
≤ δ(
π2
6
− 1)
≤ δ
completing the proof of Lemma 14.
6 Lower Bound Analysis
Recall n is even and that Dn = (S1
)n/2
is the Cartesian
product of n/2 circles, i.e. Dn = {(x1, . . . , xn): x2
1 + x2
2 =
x2
3 + x2
4 = · · · = x2
n−1 + x2
n = 1}. Under the cost vector
µ ∈ Dn/n, one can see that the probability of observing a
particular loss ` in the next round equals
Pr (`t = ` | µ, xt) =
1 + `µ · xt
2
. (3)
since `t has support {−1, 1} and mean µ · xt. Note the prob-
ability that `t = 1 is bounded between 1/4 and 3/4. Also,
the optimal decision is x∗
= −nµ ∈ Dn, which achieves an
expected loss of µ · x∗
= −1/2.
Fix an index 1 ≤ i ≤ n/2, and consider R
(i)
T , the contri-
bution to the total regret from the choice of x(i)
= (x2i−1, x2i),
i.e., the component from the i’th circle. More precisely,
R
(i)
T =
T
X
t=1
(µ(i)
· x
(i)
t +
1
n
) =
T
X
t=1
r
(i)
T
where µ(i)
= (µ2i−1, µ2i) and r
(i)
T is the instantaneous re-
gret. Clearly, we have RT =
Pn/2
i=1 R
(i)
T .
Thus, the proof of Theorem 3 reduces to proving a lower
bound E(R
(i)
T ) = Ω(
√
T). Let us condition on the event
that the i’th component of µ, namely (µ2i−1, µ2i), is one
of two vectors, ν1, ν2 ∈ S1
/n, such that kν1 − ν2k = ε
(where ε ≤ 2/n). We further condition on the exact values
of the other n/2 − 1 components of µ, thus leaving only
two possibilities for µ, which we call µ1 and µ2. We denote
ε = kν1 − ν2k = kµ1 − µ2k. Note that µ is uniform over
{µ1, µ2} in this event. Ultimately, we will choose ε as a
function T and n.
To make this conditioning precise, consider the follow-
ing two-stage sampling procedure for µ, where we first sam-
ple µ1 and µ2 and then sample µ uniformly at random over
{µ1, µ2} — we do this sampling such that the marginal dis-
tribution over µ is still uniform over Dn/n. More precisely,
first sample ν1 and ν2 such that ||ν1 − ν2|| = ε and such
that the marginal distributions Prob (ν1) and Prob (ν2) are
both uniform over S1
/n. Independently, sample the remain-
ing components µ(j)
, where j 6= i, uniformly at random over
S1
/n. This provides us with µ1 and µ2 (which only differ
in the i-th component). Finally, we sample µ uniformly at
random over {µ1, µ2}. By the tower property of conditional
expectations (Fubini’s theorem),
E(r
(i)
t ) = E E
µ
(r
(i)
t |Ht, {µ1, µ2})
where the inner expectation is over µ which lies in {µ1, µ2}.
Our next Lemma, roughly speaking, proves that deci-
sions xt that provide more information about the value of
µ, necessarily produce more instantaneous regret. More-
over, the result holds even if the algorithm were allowed to
magically know the values of µ1, µ2. This places the algo-
rithm designer on the horns of a dilemma: give up on dis-
tinguishing the cases µ = µ1 and µ = µ2, or play high-
regret decisions to try to acquire the information. As we
shall see in the proof of Theorem 3, either way, we end up
with E(R
(i)
T = Ω(
√
T): in the former case, with certainty,
and in the latter case, with high probability.
Let
bt := Pr (µ = µ1 | Ht) − Pr (µ = µ2 | Ht)
be the bias towards µ1 at time t. Note that b0 = 0, and
that the sequence (bt) is a martingale with respect to (Ht).
Our Lemma gives a lower bound on regret in terms of the
martingale differences bt+1 − bt. We have not attempted to
optimize the constants.
Lemma 15 For ε as defined above, for all t ≥ 1, for any se-
quence of decisions x1, . . . , xt and outcomes `1, . . . , `t−1, `t,
the regret from round t satisfies
E
µ
(r
(i)
t | Ht, {µ1, µ2}) ≥

7nε2
256
+
|bt+1 − bt|2
18nε2

1{|bt| ≤ 1/2}.
Proof: Let pt = Pr (µ = µ1 | Ht). Then bt = 2pt − 1. By
Bayes’ rule and equation 3, we have that:
pt+1 =
Pr (`t | µ = µ1)pt
Pr (`t | Ht)
=
pt(1 + `t(µ1 · xt))
pt(1 + `t(µ1 · xt)) + (1 − pt)(1 + `t(µ2 · xt))
=
pt(1 + `t(µ1 · xt))
1 + pt`t(µ1 · xt) + (1 − pt)`t(µ2 · xt)
Hence
bt+1 − bt
= 2(pt+1 − pt)
= 2
pt(1 + `t(µ1 · xt)) − pt − p2
t `t(µ1 · xt) − pt(1 − pt)`t(µ2 · xt)
1 + pt`t(µ1 · xt) + (1 − pt)`t(µ2 · xt)
=
2pt(1 − pt)`t(µ1 − µ2) · xt
1 + pt`tµ1 · xt + (1 − pt)`tµ2 · xt
.
Since |µi · xt| ≤ kµikkxtk =
q
1
2n
pn
2 = 1/2, the de-
nominator of the above expression is at least 1/2. Since
pt(1 − pt) ≤ 1/4, it follows that
|bt+1 − bt| ≤ |`t||(µ1 − µ2) · xt|
= |`t||(ν1 − ν2) · x
(i)
t | = ε|α|, (4)
where α may be defined as follows.
Let v1 be the unit vector in the direction of ν1 − ν2,
and let v2 be the unit vector in the direction of ν1 + ν2.
Note that v1, v2 is an orthonormal basis for the plane, since
kν1k = kν2k. Decompose x
(i)
t = αv1 + βv2, and E(µ(i)
|
Ht, {µ1, µ2}) = γv1 + δv2. By definition of bt,
E(µ(i)
| Ht, {µ1, µ2}) =
ν1 + ν2
2
+ bt
ν1 − ν2
2
so we have γ = εbt/2 and δ =
q
1
n2 − ε2
4 .
Assume the game history is such that |bt| ≤ 1/2. Oth-
erwise, since the regret is non-negative, the claim trivially
follows. Now we calculate
E
µ
(r
(i)
t | Ht, {µ1, µ2})
=
1
n
+ x
(i)
t · E
µ
(µ(i)
| Ht, {µ1, µ2})
=
1
n
+ αγ + βδ
=
1
n
+ αεbt/2 + β
r
1
n2
−
ε2
4
≥
1
n
+ αεbt/2 +

α2
2
− 1
 r
1
n2
−
ε2
4
(5)
≥
1
n
+ αεbt/2 +

α2
2
− 1
 
1
n
−
nε2
8

(6)
=
αεbt
2
+
α2
2n
+
nε2
8
−
α2
nε2
16
≥
−|α|ε
4
+
α2
2n
+
nε2
16
(7)
=
α2
18n
+
7nε2
256
+

2|α|
3
√
n
−
3
√
nε
16
2
≥
α2
18n
+
7nε2
256
≥
|bt+1 − bt|2
18nε2
+
7nε2
256
(8)
Here (5) follows because α2
+ β2
= 1 implies that 1 + β =
α2
/(1−β) ≥ α2
/2, with equality iff β = −1. Inequality (6)
follows since α2
2 −1 ≤ 0 and
√
1 − x ≤ 1−x/2. Inequality
(7) follows because |bt| ≤ 1/2 and |α| ≤ 1. Inequality (8)
follows from (4), completing the proof.
We are now ready to prove Theorem 3.
Proof:[Proof of Theorem 3] Choose ε = T−1/4
n−1/2
. Note
this is possible since the only constraint on ε is ε ≤ 2
n , which
is satisfied as long as T ≥ n2
/16, which is true by hypothe-
sis. Now, observe that, by the tower property of conditional
expectations (Fubini’s theorem) and linearity of expectation,
E R
(i)
T
=
T
X
t=1
E E
µ
(r
(i)
t | Ht, {µ1, µ2})
≥
T
X
t=1
E

7nε2
256
+
|bt+1 − bt|2
18nε2

1{|bt| ≤ 1/2}

.... by Lemma 15
=
T
X
t=1
E
7
256
√
T
+
|bt+1 − bt|2
√
T
18
!
1{|bt| ≤ 1/2}
!
≥
7
√
T
256
Prob (for all t, |bt| ≤ 1/2)
+
√
T
18
T
X
t=1
E |bt+1 − bt|2
1{|bt| ≤ 1/2}

Thus, if Prob (for all t ≤ T |bt| ≤ 1/2) ≥ 1/2 − 1/e, then
we are done by the first term on the right-hand side. Other-
wise, with probability at least 1/2 + 1/e, there exists t ≤ T
such that |bt| ≥ 1/2. Define
V :=
T
X
t=1
1{∀τ ≤ t, |bτ | ≤ 1/2}E |bt+1 − bt|2
| Ht

.
By Freedman’s Bernstein-type inequality for martingales (The-
orem 4) applied to the martingale bt∧σ, where σ = min{τ : |bτ | ≥
1/2}, which by (4) satisfies |bt+1 − bt| ≤ ε, we have,
Prob

(∃t ≤ T) |bt| ≥
1
2
and V ≤
1
32

≤ 2 exp

−1/4
1/16 + ε/3

≤
1
e
,
since by choice of ε and hypothesis on T we have
ε ≤ T−1/4
≤
1
4
<
3
16
3 − ln(2)
1 + ln(2)
.
It follows that
Prob

V >
1
32

≥ 1/2.
In particular,
T
X
t=1
E |bt+1 − bt|2
1{|bt| ≤ 1/2}

≥ E V ≥
1
64
.
Combining the above two cases, we have established that
E R
(i)
T ≥
√
T min

7
256

1
2
−
1
e

,
1
18
1
64

=
√
T
1152
,
Since RT =
Pn/2
i=1 R
(i)
T , it follows by linearity of expecta-
tion that
E RT =
n/2
X
i=1
E R
(i)
T ≥
n
2
√
T
1152
which completes the proof.
7 Extension: time-varying decision sets
Our techniques also apply to the setting when only a subset
of the full decision set D is available in each round. Suppose,
at time t, only a subset of decisions Dt ⊂ D are available.
In this case, the correct notion of regret is to compare each
chosen decision xt, not with the global optimum x∗
, but with
the best choice from the available subset Dt. Thus
RT =
T
X
t=1
(µ†
xt − µ†
x∗
t )
where x∗
t ∈ Dt is an optimal decision for µ, i.e.,
x∗
t ∈ argmin
x∈Dt
µ†
x
The only change that needs to be made to our algorithm
is that now xt is chosen from Dt instead of D.
With these changes in definitions, all of our numbered
Theorems and Lemmas still hold, with D replaced by Dt
and x∗
replaced by x∗
t where they appear. (This is trivial in
the case of the lower bounds.) The changes to the proofs are
minimal.
We note that a very similar model was considered by Abe
and Long [1999], who proved a lower bound of Ω(T3/4
) in
their setting. However, this does not contradict our results,
because their lower bound requires the dimension n to be a
function of T.
References
Naoki Abe and Philip M. Long. Associative reinforcement
learning using linear probabilistic concepts. In Proc. 16th
International Conf. on Machine Learning, pages 3–11.
Morgan Kaufmann, San Francisco, CA, 1999.
R. Agrawal. Sample mean based index policies with
O(log n) regret for the multi-armed bandit problem. Ad-
vances in Applied Probability, 27:1054–1078, 1995.
P. Auer, N. Cesa-Bianchi, and P. Fischer. Finite-time analysis
of the multiarmed bandit problem. Mach. Learn., 47(2-3):
235–256, 2002. ISSN 0885-6125.
Peter Auer. Using confidence bounds for exploitation-
exploration trade-offs. J. Mach. Learn. Res., 3:397–422,
2002. ISSN 1533-7928.
B. Awerbuch and R. Kleinberg. Adaptive routing with end-
to-end feedback: Distributed learning and geometric ap-
proaches. In Proceedings of the 36th ACM Symposium on
Theory of Computing (STOC), 2004.
Donald A. Berry and Bert Fristedt. Bandit Problems: Se-
quential Allocation of Experiments. Springer, October
1985.
V. Dani, T. P. Hayes, and S. M. Kakade. The price of ban-
dit information for online optimization. In Advances in
Neural Information Processing Systems 20 (NIPS 2007).
2008. To appear. Available online at http://books.nips.cc/.
David A. Freedman. On tail probabilities for martingales.
The Annals of Probability, 3(1):100–118, Feb. 1975.
T. L. Lai and H. Robbins. Asymptotically efficient adaptive
allocation rules. Advances in Applied Mathematics, 6:4,
1985.
Colin McDiarmid. Concentration. In Probabilistiic Methods
for Algorithmic Discrete Mathematics. Springer, 1998.
H. Robbins. Some aspects of the sequential design of exper-
iments. In Bulletin of the American Mathematical Society,
volume 55, 1952.
Sartaj Sahni. Computationally related problems. SIAM J.
Comput., 3(4):262–279, 1974.
